version: '2.3'

services:
  # InfluxDB service
  influxdb:
    image: influxdb:1.7
    container_name: influxdb
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/query?db=smartplug&epoch=ms&q=SELECT+mean%28%22emeter_get_realtime_power_mw%22%29+FROM+%22exec_smartplug%22+WHERE+time+%3E%3D+now%28%29+-+1m+GROUP+BY+time%282s%2A5%29+fill%28null%29"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    ports:
      - "8086:8086"
    env_file:
      - ./influxdb/env/env.influxdb
    volumes:
      - ./influxdb/data:/var/lib/influxdb
    networks:
      - smartplug-network

  # Chronograf service
  chronograf:
    image: chronograf:1.7
    container_name: chronograf
    restart: always
    volumes:
      - ./chronograf/data:/var/lib/chronograf
    ports:
      - "127.0.0.1:8888:8888"
    command: "chronograf --influxdb-url=http://influxdb:8086"
    depends_on:
      - influxdb
    networks:
      - smartplug-network

  # Grafana service
  grafana:
    image: grafana/grafana:5.4.3
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    env_file:
      - ./grafana/env/env.grafana
    user: "$USER_ID"
    depends_on:
      - influxdb
    volumes:
      - ./grafana/data:/var/lib/grafana
    networks:
      - smartplug-network

  # Grafana reverse proxy service
  grafana-reverse-proxy:
    image: nginx:latest
    container_name: grafana-reverse-proxy
    restart: always
    volumes:
      - "$PWD/grafana-proxy/conf/nginx.conf:/etc/nginx/nginx.conf:ro"
    ports:
      - "127.0.0.1:3003:3003"
    depends_on:
      - influxdb
      - grafana
    networks:
      - smartplug-network

  # Grafana-report service
  grafana-reporter:
    image: izakmarais/grafana-reporter
    container_name: grafana-reporter
    restart: always
    entrypoint:
      - /usr/local/bin/grafana-reporter
      - -ip
      - "grafana-reverse-proxy:3003"
    ports:
      - "127.0.0.1:8686:8686"
    depends_on:
      - influxdb
      - grafana
    networks:
      - smartplug-network

  # required to restart docker containers on healthcheck failure:
  # https://stackoverflow.com/questions/47088261/restarting-an-unhealthy-docker-container-based-on-healthcheck
  autoheal:
    container_name: autoheal
    restart: always
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - smartplug-network

networks:
  smartplug-network:
    driver: bridge
